{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","services/login.js","reducers/logInReducer.js","services/users.js","reducers/usersReducer.js","store.js","hooks/index.js","components/BlogForm.js","components/Togglable.js","components/Blogs.js","components/CommentForm.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/Menu.js","components/Users.js","components/UserBlogs.js","App.js","index.js"],"names":["notificationTimeout","setNotification","content","style","time","dispatch","clearTimeout","type","setTimeout","notificationReducer","state","action","baseUrl","token","getAll","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","blogReducer","map","blog","filter","login","credentials","initializeUser","JSON","parse","window","localStorage","getItem","setUser","loginService","user","setItem","stringify","blogService","username","logInReducer","initializeUsers","usersService","users","usersReducer","reducer","combineReducers","notification","blogs","allUsers","store","createStore","composeWithDevTools","applyMiddleware","thunk","useField","useState","value","setValue","input","onChange","event","target","reset","BlogForm","toggleForm","useDispatch","title","author","url","submitDisabled","Form","onSubmit","preventDefault","current","toggleVisibility","newBlog","createBlog","Label","Control","Button","disabled","marginTop","marginBottom","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","margin","onClick","buttonLabel","className","children","displayName","Blogs","blogFormRef","useRef","useSelector","Table","striped","sort","b1","b2","likes","to","CommentForm","comment","newComment","comments","concat","updatedBlog","blogWithComment","addComment","Row","Col","placeholder","Blog","history","useHistory","useParams","find","href","likedBlog","likeBlog","marginLeft","confirm","deleteBlog","push","index","Notification","Alert","variant","LoginForm","setUsername","password","setPassword","handleLogin","Group","Menu","padding","paddingRight","Navbar","collapseOnSelect","expand","bg","Toggle","Collapse","Nav","Link","as","name","removeItem","Users","useEffect","length","UserBlogs","App","loggedUserJSON","setUserFromStorage","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd89a84f.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION':\r\n    return action\r\n  case 'CLEAR_NOTIFICATION':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nlet notificationTimeout\r\n\r\nexport const setNotification = (content, style, time) => {\r\n  // Below is the older way I selected the notification color before using Alert with react bootstrap\r\n/*   let color = ''\r\n  if (style === 'success') {\r\n    color = 'green'\r\n  }\r\n  else if (style === 'error') {\r\n    color = 'red'\r\n  }\r\n\r\n  style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n  } */\r\n\r\n  return async (dispatch) => {\r\n\r\n    if (notificationTimeout) {\r\n      clearTimeout(notificationTimeout)\r\n    }\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      content: content,\r\n      style: style\r\n    })\r\n    notificationTimeout = setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_NOTIFICATION',\r\n      })\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport const clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR_NOTIFICATION',\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response\r\n}\r\n\r\nexport default { setToken, getAll, create, update, remove }\r\n","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'LIKE_BLOG':\r\n    return state.map((blog) =>\r\n      blog.id !== action.data.id ? blog : action.data\r\n    )\r\n  case 'NEW_COMMENT':\r\n    return state.map((blog) =>\r\n      blog.id !== action.data.id ? blog : action.data\r\n    )\r\n  case 'DELETE_BLOG':\r\n    return state.filter((blog) => blog.id !== action.data.id)\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.create(blog)\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const updatedBlog = { ...blog, likes: blog.likes + 1 }\r\n    const likedBlog = await blogService.update(blog.id, updatedBlog)\r\n    dispatch({\r\n      type: 'LIKE_BLOG',\r\n      data: likedBlog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = (blog, content) => {\r\n  return async (dispatch) => {\r\n    // Use concat instead of push to add a comment so that a new array and a new object are created (instead of pushing to the original array) to make sure state is not mutated directly\r\n    const newComment = blog.comments.concat(content)\r\n    const updatedBlog = { ...blog, comments: newComment }\r\n    const blogWithComment = await blogService.update(blog.id, updatedBlog)\r\n    dispatch({\r\n      type: 'NEW_COMMENT',\r\n      data: blogWithComment,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    await blogService.remove(blog.id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: blog,\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from './notificationReducer'\r\n\r\nconst logInReducer = (state = initializeUser(), action) => {\r\n  switch(action.type) {\r\n  case 'LOG_IN_FROM_LOCAL_STORAGE':\r\n    return action.data\r\n  case 'LOG_IN':\r\n    return action.data\r\n  case 'LOG_OUT':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nconst initializeUser = () => {\r\n  return JSON.parse(window.localStorage.getItem('loggedBlogappUser') || null)\r\n}\r\n\r\nexport const setUserFromStorage = (loggedUserJSON) => {\r\n  const user = JSON.parse(loggedUserJSON || null)\r\n  blogService.setToken(user.token)\r\n  return {\r\n    type: 'LOG_IN_FROM_LOCAL_STORAGE',\r\n    data: user\r\n  }\r\n}\r\n\r\nexport const setUser = (credentials) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginService.login(credentials)\r\n      // Stores the user details to the local storage\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      dispatch(setNotification(`Welcome ${credentials.username}`, 'success', 5))\r\n      dispatch({\r\n        type: 'LOG_IN',\r\n        data: user\r\n      })\r\n    } catch (error) {\r\n      dispatch(setNotification('wrong username or password', 'warning', 5))\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const logOutUser = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    dispatch({\r\n      type: 'LOG_OUT'\r\n    })\r\n  }\r\n}\r\n\r\nexport default logInReducer","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import usersService from '../services/users'\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await usersService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport logInReducer from './reducers/logInReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blogs: blogReducer,\r\n  user: logInReducer,\r\n  allUsers: usersReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    input: {\r\n      type,\r\n      value,\r\n      onChange,\r\n    },\r\n    reset\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useField } from '../hooks'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport {\r\n  setNotification,\r\n  clearNotification,\r\n} from '../reducers/notificationReducer'\r\n\r\nconst BlogForm = ({ toggleForm }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const title = useField('text')\r\n  const author = useField('text')\r\n  const url = useField('text')\r\n\r\n  let submitDisabled = true\r\n  if (\r\n    title.input.value !== '' &&\r\n    author.input.value !== '' &&\r\n    url.input.value !== ''\r\n  ) {\r\n    submitDisabled = false\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    const blog = {\r\n      title: title.input.value,\r\n      author: author.input.value,\r\n      url: url.input.value,\r\n    }\r\n    toggleForm.current.toggleVisibility()\r\n    dispatch(createBlog(blog))\r\n    dispatch(clearNotification())\r\n    dispatch(\r\n      setNotification(\r\n        `A new blog \"${blog.title}\" by \"${blog.author}\" added`,\r\n        'success',\r\n        5\r\n      )\r\n    )\r\n    title.reset()\r\n    author.reset()\r\n    url.reset()\r\n  }\r\n\r\n  const margin = {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create new blog</h2>\r\n      <Form onSubmit={addBlog}>\r\n        <Form.Label>Title:</Form.Label>\r\n        <Form.Control id='title' {...title.input} />\r\n        <Form.Label>Author:</Form.Label>\r\n        <Form.Control id='author' {...author.input} />\r\n        <Form.Label>URL:</Form.Label>\r\n        <Form.Control id='url' {...url.input} />\r\n        <Button\r\n          id=\"create\"\r\n          type=\"submit\"\r\n          disabled={submitDisabled}\r\n          style={margin}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  const margin = {\r\n    marginBottom: 10\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility} style={margin}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <Button onClick={toggleVisibility} style={margin}>Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table } from 'react-bootstrap'\r\nimport BlogForm from './BlogForm'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blogs = () => {\r\n  const blogFormRef = useRef()\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const byLikes = (b1, b2) => b2.likes - b1.likes\r\n\r\n  /* const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  } */\r\n  return (\r\n    <div>\r\n      <Togglable buttonLabel=\"Create new blog\" ref={blogFormRef}>\r\n        <BlogForm toggleForm={blogFormRef} />\r\n      </Togglable>\r\n\r\n      <Table striped>\r\n        <tbody>\r\n          {blogs.sort(byLikes).map((blog) => (\r\n            <tr key={blog.id}>\r\n              <td>\r\n                <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useField } from '../hooks/index'\r\nimport { addComment } from '../reducers/blogReducer'\r\n\r\nconst CommentForm = ({ blog }) => {\r\n  const dispatch = useDispatch()\r\n  const comment = useField('text')\r\n\r\n  const handleComment = (event) => {\r\n    event.preventDefault()\r\n    const content = comment.input.value\r\n    dispatch(addComment(blog, content))\r\n    comment.reset()\r\n  }\r\n\r\n  return (\r\n    <div /* style={{ width: '50%', display: 'flex', flexDirection: 'row' }} */>\r\n      <Form onSubmit={handleComment}>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              placeholder=\"Add a comment here\"\r\n              style={{ marginBottom: 15 }}\r\n              {...comment.input}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"submit\">Add</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport { deleteBlog, likeBlog } from '../reducers/blogReducer'\r\nimport CommentForm from './CommentForm'\r\n\r\nconst Blog = ({ user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLike = () => {\r\n    dispatch(likeBlog(blog))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(`Remove blog '${blog.title}' by ${blog.author}?`)) {\r\n      dispatch(deleteBlog(blog))\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const id = useParams().id\r\n  const blog = useSelector((state) => state.blogs).find((blog) =>\r\n    blog.id === id ? blog : null\r\n  )\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {blog.title} - {blog.author}\r\n      </h2>\r\n      <p>\r\n        <a href={blog.url}>{blog.url}</a>\r\n      </p>\r\n      <p>\r\n        {blog.likes} likes\r\n        <Button onClick={handleLike} style={{ marginLeft: 10 }}>\r\n          like\r\n        </Button>\r\n      </p>\r\n      <p>Added by {blog.user.username}</p>\r\n      {user.username === blog.user.username ? (\r\n        <Button onClick={handleDelete} style={{ marginBottom: 10 }}>remove</Button>\r\n      ) : null}\r\n      <h3>Comments</h3>\r\n      <CommentForm blog={blog} />\r\n      <ul>\r\n        {blog.comments.map((comment, index) => (\r\n          /* whatever is in that second position after the comma is the index of the item in the array */\r\n          <li key={index}>{comment}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Notification = () => {\r\n  const content = useSelector((state) => state.notification.content)\r\n  const style = useSelector((state) => state.notification.style)\r\n  return <Alert variant={style}>{content}</Alert>\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setUser } from '../reducers/logInReducer'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    dispatch(\r\n      setUser({\r\n        username,\r\n        password,\r\n      })\r\n    )\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  const margin = {\r\n    marginTop: 10,\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log In</h2>\r\n\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Group>\r\n          <Form.Label>username:</Form.Label>\r\n          <Form.Control\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n          <Form.Label>password:</Form.Label>\r\n          <Form.Control\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n          <Button id=\"login-button\" variant=\"primary\" type=\"submit\" style={margin}>\r\n            Login\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { logOutUser } from '../reducers/logInReducer'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap'\r\n\r\nconst Menu = ({ user }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault()\r\n    dispatch(logOutUser())\r\n    history.push('/')\r\n  }\r\n\r\n  const padding = {\r\n    paddingRight: 10,\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\" as=\"span\">\r\n            <Link style={padding} to=\"/\">\r\n              blogs\r\n            </Link>\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#\" as=\"span\">\r\n            <Link style={padding} to=\"/users\">\r\n              users\r\n            </Link>\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#\" as=\"span\">\r\n            {user ? (\r\n              <div>\r\n                <em style={padding}>{user.name} logged in</em>\r\n                <Button onClick={handleLogout}>log out</Button>\r\n              </div>\r\n            ) : null }\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { initializeUsers } from '../reducers/usersReducer'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const users = useSelector((state) => state.allUsers)\r\n  const blogs = useSelector((state) => state.blogs)\r\n\r\n  // Users must be reinitialized here because, after a blog is created, the number of blogs associated with each user is not updated (so the number of blogs created by the user is not updated on the Users page) because the blogs array property on the user object needs to be populated but this does not happen because the user object is not given a \"get\" request at the time of the blog \"post\" request\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  }, [blogs])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table striped>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              <strong>blogs created</strong>\r\n            </th>\r\n          </tr>\r\n          {users.map((user) => {\r\n            return (\r\n              <tr key={user.id}>\r\n                <td>\r\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                </td>\r\n                <td>{user.blogs.length}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst UserBlogs = () => {\r\n  const id = useParams().id\r\n  const user = (useSelector((state) => state.allUsers)).find((user) =>\r\n    user.id === id ? user : null\r\n  )\r\n  if (!user) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      <ul>\r\n        {user.blogs.map((blog) => (\r\n          <li key={blog.id}>{blog.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserBlogs\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\nimport { setUserFromStorage } from './reducers/logInReducer'\r\n\r\nimport Blogs from './components/Blogs'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport Menu from './components/Menu'\r\nimport Users from './components/Users'\r\nimport UserBlogs from './components/UserBlogs'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    // Check to see if user details of a logged-in user can already be found on the local storage\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      dispatch(setUserFromStorage(loggedUserJSON))\r\n    }\r\n  }, [dispatch])\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Menu user={user} />\r\n        <h1>Blogs</h1>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path=\"/blogs/:id\">\r\n            <Blog user={user} />\r\n          </Route>\r\n          <Route path=\"/users/:id\">\r\n            <UserBlogs />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/\">{user === null ? <LoginForm /> : <Blogs />}</Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}